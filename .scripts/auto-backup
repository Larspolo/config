#!/bin/bash
reset=`tput sgr0`
red=`tput setaf 1`
green=`tput setaf 2`
blue=`tput setaf 6`
echo -ne "${blue}Please Wait...${reset}\r"
function do_backup {
    git add . &>>/tmp/backup_log.txt && echo -e "\n" &>>/tmp/backup_log.txt
    git commit -m "Backup $(date +%y/%m/%d)" &>>/tmp/backup_log.txt && echo -e "\n" &>>/tmp/backup_log.txt
    git pull $1 master &>>/tmp/backup_log.txt && echo -e "\n" &>>/tmp/backup_log.txt &&
    if [[ $? -ne 0 ]]; then
        echo "${red}Git pull went wrong:${reset} check /tmp/backup_log.txt for more information.";
        return 1
    fi
    git push $1 master &>>/tmp/backup_log.txt
    if [[ $? -ne 0 ]]; then
        echo "${red}Git push went wrong:${reset} check /tmp/backup_log.txt for more information.";
        return 1
    fi

    return 0
}
worked=0
>/tmp/backup_log.txt

echo -e "
***************************
****  Informatica GIT  ****
***************************" >> /tmp/backup_log.txt
cd ~/Informatica/
do_backup backup
worked=$?
echo -e "
***************************
****     Config GIT    ****
***************************" >> /tmp/backup_log.txt
cd ~/.config/i3/
do_backup origin
worked=$((worked + $?))

if [[ $worked -eq 0 ]]; then
    echo "${green}Backup was succesful.${reset}"
    exit 0
else
    exit 1
fi
